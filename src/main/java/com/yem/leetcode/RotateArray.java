package com.yem.leetcode;/** * 轮转数组 * * 给定一个整数数组 nums，将数组中的元素向右轮转 k 个位置，其中 k 是非负数 * * 输入: nums = [1,2,3,4,5,6,7], k = 3 * 输出: [5,6,7,1,2,3,4] * 解释: * 向右轮转 1 步: [7,1,2,3,4,5,6] * 向右轮转 2 步: [6,7,1,2,3,4,5] * 向右轮转 3 步: [5,6,7,1,2,3,4] * */public class RotateArray {	public static void main(String[] args) {		int[] nums = {-1,-100,3,99};		rotate(nums, 2);	}	public static int[] rotate(int[] nums, int k) {		k = k % nums.length;		if(k == 0){			return nums;		}		int i = 0;		int beforeIndex = 0;		int before = nums[0];		while (i < nums.length){			int changeIndex = (beforeIndex + k) >= nums.length ? beforeIndex + k - nums.length : beforeIndex + k;			int temp = nums[changeIndex];			nums[changeIndex] = before;			beforeIndex = changeIndex;			before = temp;			i++;		}		return nums;	}}